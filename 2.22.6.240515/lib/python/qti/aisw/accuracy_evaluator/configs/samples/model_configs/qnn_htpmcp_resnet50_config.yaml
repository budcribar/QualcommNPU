model:
    info:
        desc: Resnet50 mlcommons reference model used.
        batchsize: 1
    globals:
        count: 50
        calib: 5 # -1 implies use all calibration images for PGQ.

    dataset:
        name: ILSVRC2012
        path: "/home/ml-datasets/imageNet_preproc/"
        inputlist_file: inputlist.txt
        calibration:
            type: raw
            file: calibration.txt

    inference-engine:
        model_path: MLPerfModels/ResNetV1.5/modelFiles/ONNX/resnet50_v1.onnx
        simplify_model: True # default

        inference_schemas:
            - inference_schema:
                  name: qnn
                  precision: fp32
                  target_arch: x86_64-linux-clang
                  backend: cpu
                  tag: qnn_fp32

            - inference_schema:
                  name: qnn
                  precision: fp16
                  target_arch: x86_64-linux-clang
                  backend: htp_mcp
                  tag: qnn_fp16
                  backend_extensions:
                      num_cores: 1
                      elf_path: lib/hexagon-v68/unsigned/libQnnHtpMcpV68.elf
                      fp16_relaxed_precision: 1
                      timeout: 5000

            - inference_schema:
                  name: qnn
                  precision: quant
                  target_arch: x86_64-linux-clang
                  backend: htp_mcp
                  tag: qnn_int8
                  backend_extensions:
                      num_cores: 1
                      heap_size: 256
                      elf_path: lib/hexagon-v68/unsigned/libQnnHtpMcpV68.elf
                      timeout: 5000
                  converter_params:
                      param_quantizer: tf | enhanced | symmetric
                      algorithms: default | cle
                      use_per_channel_quantization: True | False
                      use_per_row_quantization: True | False
                  runtime_params:
                      timeout: 5000

        inputs_info:
            - input_tensor:0:
                  type: float32
                  shape: ["*", 3, 224, 224]

        outputs_info:
            - ArgMax_0:
                  type: int64
                  shape: ["*"]
            - softmax_tensor_0:
                  type: float32
                  shape: ["*", 1001]

    evaluator:
        comparator:
            enabled: True #default
            fetch-top: 1 #default
            type: avg # default comparator for all outputs
            tol: 0.001 # default tolerance for all outputs
